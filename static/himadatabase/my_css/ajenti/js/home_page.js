/**
 * Created by Administrator on 2016/4/22 0022.
 */
angular.module('ui.bootstrap.buttons', [])

.constant('buttonConfig', {
  activeClass: 'active',
  toggleEvent: 'click'
})

.controller('ButtonsController', ['buttonConfig', function(buttonConfig) {
  this.activeClass = buttonConfig.activeClass || 'active';
  this.toggleEvent = buttonConfig.toggleEvent || 'click';
}])

.directive('btnRadio', function () {
  return {
    require: ['btnRadio', 'ngModel'],
    controller: 'ButtonsController',
    link: function (scope, element, attrs, ctrls) {
      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];

      //model -> UI
      ngModelCtrl.$render = function () {
        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.btnRadio)));
      };

      //ui->model
      element.bind(buttonsCtrl.toggleEvent, function () {
        var isActive = element.hasClass(buttonsCtrl.activeClass);

        if (!isActive || angular.isDefined(attrs.uncheckable)) {
          scope.$apply(function () {
            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.btnRadio));
            ngModelCtrl.$render();
          });
        }
      });
    }
  };
})

.directive('btnCheckbox', function () {
  return {
    require: ['btnCheckbox', 'ngModel'],
    controller: 'ButtonsController',
    link: function (scope, element, attrs, ctrls) {
      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];

      function getTrueValue() {
        return getCheckboxValue(attrs.btnCheckboxTrue, true);
      }

      function getFalseValue() {
        return getCheckboxValue(attrs.btnCheckboxFalse, false);
      }

      function getCheckboxValue(attributeValue, defaultValue) {
        var val = scope.$eval(attributeValue);
        return angular.isDefined(val) ? val : defaultValue;
      }

      //model -> UI
      ngModelCtrl.$render = function () {
        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));
      };

      //ui->model
      element.bind(buttonsCtrl.toggleEvent, function () {
        scope.$apply(function () {
          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());
          ngModelCtrl.$render();
        });
      });
    }
  };
});
// Generated by CoffeeScript 1.8.0
(function() {
  var app;

  $((function(_this) {
    return function() {
      document.body.scrollTop = 0;
      setTimeout(function() {
        return $('.carousel-slick').slick({
          dots: false,
          slide: '.slide',
          infinite: true,
          speed: 300,
          slidesToShow: 1,
          slidesToScroll: 1
        });
      }, 10);
      if (location.hash) {
        $(".nav a[data-target=" + location.hash + "]").tab('show');
      }
      $('#usage-counter').css({
        opacity: 0
      });
      return $.get('/query_use', function(data) {
        var k, v;
        data = JSON.parse(data);
        v = 0;
        data = data.data.values['Section activated'];
        for (k in data) {
          v += data[k];
        }
        return $('#usage-counter').html("This week, <abbr title='This is a real number'>" + v + "</abbr> people used Ajenti to administer their servers.").fadeTo(1000, 1);
      });
    };
  })(this));

  app = angular.module('app', ['ui', 'ui.bootstrap.buttons']);

  app.config(function($interpolateProvider) {
    $interpolateProvider.startSymbol('[[');
    return $interpolateProvider.endSymbol(']]');
  });

  app.controller('LicensingCtrl', (function(_this) {
    return function($scope) {
      $scope.type = 'web-hosting';
      $scope.instances = 1;
      $scope.months = 1;
      return $scope.getTotal = function() {
        var instancePrice, nInstances, nMonths, _ref;
        if ((_ref = $scope.type) === 'appliance-lifetime' || _ref === 'not-sure') {
          return '';
        }
        nInstances = {
          'appliance': 1,
          'appliance-lifetime': 1
        }[$scope.type] || $scope.instances;
        instancePrice = {
          'hosting': 3,
          'web-hosting': 6,
          'appliance': 30
        }[$scope.type];
        nMonths = {
          'appliance': 1,
          'appliance-lifetime': 1
        }[$scope.type] || $scope.months;
        return instancePrice * nInstances * nMonths;
      };
    };
  })(this));

}).call(this);